# Unique identifier of a menu.
name: "simple_sample_menu"
# Type of inventory to show. Possible values: ONE_ROW, TWO_ROW, THREE_ROW, SIX_ROW
windowType: "SIX_ROW"
# Displayed title of the inventory.
title: "Simple Sample"
# How often should the GUI refresh its placeholder values and show up-to-date data. The value is in minecraft ticks. (20 ticks = 1 second)
updateIntervalTicks: 100

# Optional command for directly opening this menu. You can remove this if you do not need a dedicated command for this menu.
command:
  # Required unique command identifier.
  command: "samplemenu"
  # Required Permission required to execute this command.
  permission: "shygui.samplemenu"
  # Required arbitrary help usage.
  usage: "/shyguisample"
  # Required arbitrary description of the command.
  description: "Opens the sample menu of ShyGUI."
  # Optional aliases for the command.
  aliases:
    - "samplemenu"

# Optional condition which has to be true in order to open the gui.
condition:
  # Optional condition type. Possible values: NONE, JAVASCRIPT, STRING_EQUALS, STRING_NOT_EQUALS, STRING_EQUALS_IGNORE_CASE, STRING_NOT_EQUALS_IGNORE_CASE, NUMBER_GREATER_THAN, NUMBER_GREATER_THAN_OR_EQUAL, NUMBER_LESS_THAN, NUMBER_LESS_THAN_OR_EQUAL, STRING_CONTAINS, STRING_NOT_CONTAINS, STRING_CONTAINS_IGNORE_CASE, STRING_NOT_CONTAINS_IGNORE_CASE
  type: "NONE"
  # Optional left side of the condition if type starts with "STRING_" or "NUMBER_". Placeholders are supported.
  left: ""
  # Optional right side of the condition if type starts with "STRING_" or "NUMBER_". Placeholders are supported.
  right: ""
  # Optional JavaScript based boolean expression if type is "JAVASCRIPT". Placeholders are supported. This can be used for more complex boolean expressions.
  js: ""

# All items which are rendered inside the inventory. You need to specify the item you want to display and the position.
# For more complex GUIs, you may want to show different items on the same position depending on a certain condition:
#  e.g. pet is spawned, show despawn button
#  e.g. pet is not spawned, show spawn button
# You can achieve that using the 'condition' property below.
# If multiple conditions are true for a single position, the last item in the list wins and is being displayed.
# You can use this to specify background items at the beginning of the list below and overwrite it with more important item by specifying them later in the list.
items:
  - row: 1 # The GUI is seen as a grid. Use row and col to specify the location of an item. This is the required row property.
    # The GUI is seen as a grid. Use row and col to specify the location of an item. This is the required column property.
    col: 1
    # Optional the amount of rows this item is being rendered.
    rowSpan: 9
    # Optional the amount of columns this item is being rendered.
    colSpan: 9
    # Required item to display.
    item:
      # Required minecraft material name. Supports multiple identifiers separated by comma to ensure version compatibility. Placeholders are supported.
      typeName: "minecraft:iron_block,42"
      # Optional amount displayed.
      amount: 1
      # Optional Durability.
      durability: 0
      # Optional property to specify a base64 encoded skin URL. Placeholders are supported.
      skinBase64: ""
      # Optional Data Components in Minecraft Data Component JSON format. This has replaced NBT since Minecraft 1.20.5. See https://minecraft.wiki/w/Data_component_format. Placeholders are supported.
      component: ""
      # Optional NBT Tags in standard Minecraft NBT format. e.g. {Unbreakable:1} This works in versions below Minecraft 1.20.5. Placeholders are supported.
      nbt: ""
      # Optional displayName for item. Placeholders are supported.
      displayName: ""
      # Optional lore for the item. Placeholders are supported.
      lore:
        - "&cThis is a background item."
    # Optional condition to define when this item will be displayed.
    condition:
      # Optional permission required to see this item. This field works independently of the type property below.
      permission: ""
      # Optional condition type. Possible values: NONE, JAVASCRIPT, STRING_EQUALS, STRING_NOT_EQUALS, STRING_EQUALS_IGNORE_CASE, STRING_NOT_EQUALS_IGNORE_CASE, NUMBER_GREATER_THAN, NUMBER_GREATER_THAN_OR_EQUAL, NUMBER_LESS_THAN, NUMBER_LESS_THAN_OR_EQUAL, STRING_CONTAINS, STRING_NOT_CONTAINS, STRING_CONTAINS_IGNORE_CASE, STRING_NOT_CONTAINS_IGNORE_CASE
      type: "NONE"
      # Optional left side of the condition if type starts with "STRING_" or "NUMBER_". Placeholders are supported.
      left: ""
      # Optional right side of the condition if type starts with "STRING_" or "NUMBER_". Placeholders are supported.
      right: ""
      # Optional JavaScript based boolean expression if type is "JAVASCRIPT". Placeholders are supported. This can be used for more complex boolean expressions.
      js: ""
    # Optional list of commands which are executed when you click on this item.
    commands:
      - type: "PER_PLAYER" # Execution type. Possible values: "SERVER_PER_PLAYER" executes the command with server level permissions. "PER_PLAYER" executes the command with player level permission.
        # Command to execute. e.g. /say Hello World. PlaceHolders are supported. Replaces the "%player_name% placeholder with the executing player.
        command: ""
  - row: 3
    col: 3
    item:
      typeName: "minecraft:gold_block,41"
      amount: 1
      durability: 0
      displayName: "&eBroadcast Hello."
      lore:
        - "&aClick me!"
    commands:
      - type: "SERVER_PER_PLAYER"
        command: "/say Hello from GUI." # Executes the /say command with server level permission. (The player clicking on it does not need to have the permission)
  - row: 3
    col: 7
    item:
      typeName: "minecraft:gold_block,41"
      amount: 1
      durability: 0
      displayName: "&ePlayer Hello via Server Shell."
      lore:
        - "&aClick me!"
    commands:
      - type: "SERVER_PER_PLAYER"
        # Sends a message to the executing player. Server level permission require you to reference the player name in the command.
        command: "/shygui message Hello to player &e%shygui_player_name% &afrom GUI. / %shygui_player_name%"
  - row: 3
    col: 8
    item:
      typeName: "minecraft:gold_block,41"
      amount: 1
      durability: 0
      displayName: "&ePlayer Hello via Player."
      lore:
        - "&aClick me!"
    commands:
      - type: "PER_PLAYER"
        # Sends a message to the executing player. Per Player requires that the player has got the permission to /shygui message but you do not have to specify the name.
        command: "/shygui message Hello to player &e%shygui_player_name% &afrom GUI."
